anos <- 2020:2024
tabelas_cnae <- lapply(anos, function(ano) list.files(paste("/Users/ottotavares/Library/Mobile Documents/com~apple~CloudDocs/Documents/IM_DME/Estatistica_DesenhoIndustrial/trabalhos/tabelas_", ano, sep = "")))
tabelas_cnae
tabs <- 3:4
tabelas_cnae <- lapply(tabs, function(tab) list.files(paste("/Users/ottotavares/Library/Mobile Documents/com~apple~CloudDocs/Documents/IM_DME/Estatistica_DesenhoIndustrial/trabalhos/tabelas_2022/Tabela ", ano, ".xlsx" , sep = "")))
tabs <- 3:4
tabelas_cnae <- lapply(tabs, function(tab) list.files(paste("/Users/ottotavares/Library/Mobile Documents/com~apple~CloudDocs/Documents/IM_DME/Estatistica_DesenhoIndustrial/trabalhos/tabelas_2022/Tabela ", tab, ".xlsx" , sep = "")))
tabelas_cnae
tabelas_cnae <- lapply(tabs, function(tab) readxl::read_excel(paste("/Users/ottotavares/Library/Mobile Documents/com~apple~CloudDocs/Documents/IM_DME/Estatistica_DesenhoIndustrial/trabalhos/tabelas_2022/Tabela ", tab, ".xlsx" , sep = "")))
tabelas_cnae[[1]]
tabelas_cnae[[2]]
length(tabelas_cnae)
10 %% 2
10 %% 3
10 %/% 3
10 %/% 2
num2 %% num1
num1 <- 3
num2 <- 4
num2 %% num1
num2 %/% num1
c(TRUE, TRUE, FALSE) & c(FALSE, TRUE)
c(TRUE, TRUE, FALSE) %&% c(FALSE, TRUE)
c(TRUE, TRUE, FALSE) && c(FALSE, TRUE)
c(TRUE, TRUE, FALSE) & c(FALSE, TRUE)
c(TRUE, TRUE, FALSE) & c(FALSE, TRUE, FALSE)
c(TRUE, TRUE, FALSE) && c(FALSE, TRUE, FALSE)
c(TRUE, TRUE, FALSE) %in% c(FALSE, TRUE, FALSE)
c(TRUE, TRUE, FALSE) == c(FALSE, TRUE, FALSE)
c(TRUE, TRUE, FALSE) & c(FALSE, TRUE, FALSE)
c(TRUE, TRUE, FALSE) | c(FALSE, TRUE, FALSE)
c(TRUE, TRUE, FALSE) && c(FALSE, TRUE, FALSE)
c(TRUE) && c(FALSE)
all(c(1,4,7) != c(1, 4, 7))
c(1,4,7) != c(1, 4, 7)
all(c(1,4,7) == c(1, 4, 7))
all(c(1,2,7) == c(1, 4, 7))
all(c(1,2,7) != c(1, 4, 7))
all(c(1,4,7) != c(1, 4, 7))
any(c(1,3,5) != c(2, 4, 7))
paste(num3, text3, sep = " ")
text3 <- "praia"
num3 <- 1
paste(num3, text3, sep = " ")
paste(num1, text1, sep = " ")
text1 <- "mares"
text2 <- "montanhas"
paste(num1, text1, sep = " ")
paste(num2, text2, sep = " ")
paste(frase1, paste(frase2, frase3, sep = " e "), sep = ", ")
rm(list = ls())
rm(list = ls())
install.packages("tidyverse")
library(tidyverse)
filter()
base::mean(1:3)
mean(1:3)
?filter
?dplyr::filter
_variavel <- 1
variavel <- 1
variavel_ <- 1
v*riavel <- 1
renda.trabalho <- 2000
renda.capital <- 2000
rm(variavel)
rm(variavel_)
rm(list(renda.capital, renda.trabalho))
rm(list("renda.capital", "renda.trabalho"))
rm(c("renda.capital", "renda.trabalho"))
rm(list = c("renda.capital", "renda.trabalho"))
?rm
variavel <- 2000
variavel
variavel = 2000
variavel = 2500
idades <- c(23, 45, 55, 30)
idades
mean(idades)
num1 <- 3
num2 <- 4
num1 + num2
num1 - num2
num1 * num2
rm(variavel)
exemplo.concat <- paste("a", 3, sep = "")
exemplo.concat
exemplo.concat <- paste("a", 3, sep = " ")
examplo.concat
exemplo.concat
exemplo.concat <- paste("a", 3, sep = "-")
class(exemplo.concat)
exemplo.concat
class(num1)
num1 <- as.integer(3)
class(num1)
idades
as.integer(mean(idades))
mean(idades)
round(mean(idades), 1)
ceiling(mean(idades))
nomes <- c("juliana", "marcos", "liliana", "jose")
nomes
idades <- c(25, 90, 34, 11)
mean(idades)
idades <- c(25, 90, 34, 11, 'otto')
mean(idades)
mean(idad)
mean(idades, na.rm = T)
idades <- c(25, 90, 34, 11)
mean(idades, na.rm = T)
mean(idades)
?mean
?matrix
matrix(c(1,5,6,7,8,10), nrow = 3, ncol = 2)
m1 <- matrix(c(1,5,6,7,8,10), nrow = 3, ncol = 2)
class(m1)
m1[1,1]
m1[1,2]
m1[1,2] <- 'otto'
m1
df1 <- as.data.frame(m1)
df1
df1$V1
class(df1$V1)
df1$V1 <- as.numeric(df1$V1)
df1
df1$V1
class(df1$V1)
class(df1$V2)
m1
class(df1[,1])
class(m1[,1])
list(1, 2)
list(df1, m1)
names(df1)
names(df1) <- c("coluna.num", "coluna.txt")
df1
df1$coluna.num
df1$coluna.txt
df1[,1]
df1[,2]
df1[,"coluna.num"]
df1[,"coluna.txt"]
rownames(df1)
rownames(df1) <- c("prim.lin", "seg.lin", "terc.lin")
df1
df1[1,1]
df1[1,]
df1[,1]
sqrt(4)
(4)^(1/2)
10 %% 5
10 %% 3
10 %/% 3
10 %/% 5
m1[1,2] <- 7
m1
m1 <- as.numeric(m1)
m1
m1 <- matrix(c(1,5,6,7,8,10), nrow = 3, ncol = 2)
m1
m2 <- matrix(c(1,5,6,4,25,3), nrow = 3, ncol = 2)
m1 %*% m2
m2 <- matrix(c(1,5,6,4,25,3), nrow = 2, ncol = 3)
m1 %*% m2
m1
m2
m1 * m2
m2 <- matrix(c(1,5,6,4,25,3), nrow = 3, ncol = 2)
m1 * m2
m2
m1
ls()
getwd()
save(m1, file = "m1_aula2.RData")
rm(m1)
load("m1_aula2.RData")
m1
ls()
save.image('dados_aula2.RData')
rm(list = ls())
load("dados_aula2.RData")
devtools::install_github("rstats-db/odbc")
devtools::install_github("tidyverse/dbplyr")
library(DBI)
con <- dbConnect(odbc::odbc(),
Driver    = "SQL Server",
Server    = "localhost",
Database  = "airontime",
UID       = [My User ID],
library(DBI)
con <- dbConnect(odbc::odbc(),
Driver    = "SQL Server",
Server    = "localhost",
Database  = "airontime",
UID       = "otavares",
PWD       = "123456",
Port      = 1433)
odbc()
shiny::runGadget(sparklyr::connection_spark_shinyapp(), viewer = .rs.embeddedViewer)
library(sparklyr)
sc <- spark_connect(master = "http://server/livy/",
version = "2.4.0",
method = "livy", config = livy_config(
username = "",
password = rstudioapi::askForPassword("Livy password:")))
library(tidyverse)
library(rvest)
library(data.table)
arquivo.texto <-read.table('/dados_auxiliares/emotion.txt', sep = "\t")
arquivo.texto <-read.table('dados_auxiliares/emotion.txt', sep = "\t")
arquivo.texto <-read.table('dados_auxiliares/emotion.txt',header = TRUE ,  sep = "\t")
arquivo.texto
data(emotion)
data
tomato <- read.csv("dados_auxiliares/TomatoFirst.csv", sep = ",")
tomato
tomato.tbl <- readr::read_csv("dados_auxiliares/TomatoFirst.csv")
tomato.data.table <- data.table::fread("dados_auxiliares/TomatoFirst.csv")
crimes.data.table <- fread("dados_auxiliares/BaseDPEvolucaoMensalCisp.csv")
#Importando com read.csv da base do R sem tratatamento. O que há de errado?
crimes.base <- read.csv("dados_auxiliares/BaseDPEvolucaoMensalCisp.csv")
crimes.base <- read.csv("dados_auxiliares/BaseDPEvolucaoMensalCisp.csv", sep = ";")
library(rvest)
#Lendo dados da populacao mundial a partir do wikipedia
#Checando se o site permite extracao dos dados
paths_allowed(paths="https://en.wikipedia.org/wiki/World_population")
populacao.mundial.web <- read_html("https://en.wikipedia.org/wiki/World_population")
populacao.mundial.web <- read_html("https://en.wikipedia.org/wiki/World_population")
lpop <- populacao.mundial.web %>% rvest::html_nodes("table") %>% html_table()
pop.mundial <- lpop[[4]]
pop.mundial
minhaFuncao <- function(param1, param2, param3)
{
#Corpo da função
variavelFuncao <- (param1 + param2 ) - param3
#Saída da função
return(variavelFuncao)
}
#Chamando a função customizada
minhaFuncao(param1 = 10, param2 = 5, param3 =  5)
library(rvest)
populacao.mundial.web <- read_html("https://en.wikipedia.org/wiki/World_population")
populacao.mundial.web %>% rvest::html_nodes("table")
populacao.mundial.web %>% rvest::html_nodes("table") %>% html_table()
g1.agora <- read_html("https://www.globo.com/")
g1.agora %>% rvest::html_nodes("table")
g1.agora
g1.agora %>% rvest::html_nodes("body")
g1.agora %>% rvest::html_nodes("header")
g1.agora %>% rvest::html_nodes("header") %>% html_table()
g1.agora %>% rvest::html_nodes("header")
g1.agora %>% rvest::html_nodes("h2")
g1.agora %>% rvest::html_nodes("h2") %>% html_table()
g1.agora %>% rvest::html_elements("h2")
g1.agora %>% rvest::html_elements("h2") %>% html_text()
g1.agora <- read_html("https://www.globo.com/")
titulos <- g1.agora %>% rvest::html_elements("h2") %>% html_text()
headlines <- titulos[1:16]
headlines
arquivo.texto <-read.table('dados_auxiliares/emotion.txt',header = TRUE ,  sep = "\t")
arquivo.texto
arquivo.texto <-read.table('dados_auxiliares/emotion.txt',header = F ,  sep = "\t")
arquivo.texto
rm(list=ls())
library(tidyverse)
library(rvest)
library(data.table)
install.packages("data.table")
arquivo.texto <-read.table('dados_auxiliares/emotion.txt', sep = "\t")
arquivo.texto
arquivo.texto <-read.table('dados_auxiliares/emotion.txt', sep = ";")
head(arquivo.texto)
class(arquivo.texto)
dim(arquivo.texto)
rm(list=ls())
arquivo.texto <-read.table('dados_auxiliares/emotion.txt', sep = "\t")
head(arquivo.texto)
arquivo.texto$V1
arquivo.texto$V2
getwd()
setwd("/Users/ottotavares/Library/Mobile Documents/com~apple~CloudDocs/Documents/infnet/")
arquivo.texto <-read.table('dados_auxiliares/emotion.txt', sep = "\t")
getwd()
setwd("/Users/ottotavares/Library/Mobile Documents/com~apple~CloudDocs/Documents/infnet/Estatistica_Ciencia_Dados_2025/")
arquivo.texto <-read.table('dados_auxiliares/emotion.txt', sep = "\t")
head(arquivo.texto)
arquivo.texto <-read.table('dados_auxiliares/emotion.txt',header = TRUE ,  sep = "\t")
head(arquivo.texto)
names(arquivo.texto)
names(arquivo.texto)[c(2,1,3:length(names(arquivo.texto))]
c(2,1,3:length(names(arquivo.texto))
c(2,1,3:length(names(arquivo.texto)))
names(arquivo.texto)[c(2,1,3:length(names(arquivo.texto)))]
head(arquivo.texto)
arquivo.texto[1,] <- names(arquivo.texto)
head(arquivo.texto)
?read.table
names(arquivo.texto) <- arquivo.texto[1,]
head(arquivo.texto)
head(arquivo.texto[-1,])
arquivo.texto <- arquivo.texto[-1,]
head(arquivo.texto)
arquivo.texto <-read.table('dados_auxiliares/emotion.txt', sep = "\t")
arquivo.texto <-read.table('dados_auxiliares/emotion.txt',header = TRUE ,  sep = "\t")
tomato <- read.csv("dados_auxiliares/TomatoFirst.csv", sep = ",")
head(tomato)
tomato <- read.csv("dados_auxiliares/TomatoFirst.csv")
head(tomato)
arquivo.texto
write.csv(arquivo.texto, 'dados_auxiliares/emotion.csv')
tomato.tbl <- readr::read_csv("dados_auxiliares/TomatoFirst.csv")
tomato.data.table <- data.table::fread("dados_auxiliares/TomatoFirst.csv")
ini.base <- Sys.time()
crimes.base <- read.csv2("dados_auxiliares/BaseDPEvolucaoMensalCisp.csv")
fim.base <- Sys.time()
total.base <- fim.base - ini.base
total.base
ini.base.dt <- Sys.time()
crimes.base <- data.table::fread("dados_auxiliares/BaseDPEvolucaoMensalCisp.csv")
fim.base.dt <- Sys.time()
total.base.dt <- fim.base.dt - ini.base.dt
total.base.dt
ini.base.rr <- Sys.time()
crimes.base <- readr::read_csv2("dados_auxiliares/BaseDPEvolucaoMensalCisp.csv")
fim.base.rr <- Sys.time()
total.base.rr <- fim.base.rr - ini.base.rr
total.base.rr
tomato.tbl
tomato
tomato$Tomato
tomato$Round
tomato.data.table
library(readxl)
salarios <- readxl::read_excel("dados_auxiliares/dados_bussab_m.xlsx")
head(salarios)
?readxl::read_excel
?read.csv
crimes.base <- read.csv2("dados_auxiliares/BaseDPEvolucaoMensalCisp.csv", encoding = 'latin1')
head(crimes.base)
unique(crimes.base$munic)
library(rvest)
populacao.mundial.web <- read_html("https://en.wikipedia.org/wiki/World_population")
populacao.mundial.web
lpop <- populacao.mundial.web %>% rvest::html_nodes("table") %>% html_table()
lpop[[1]]
lpop[[2]]
pop.mundial <- lpop[[4]]
pop.mundial
g1.agora <- read_html("https://www.globo.com/")
g1.agora
titulos <- g1.agora %>% rvest::html_elements("h2") %>% html_text()
titulos
headlines <- titulos[1:16]
headlines
continentes <- readr::read_csv("dados_auxiliares/continents-according-to-our-world-in-data.csv")
rm(list=ls())
c(100, 35, 67, 1, 9, 2, 15) %>% sort()
library(tidyverse)
caso.tamanho.impar.mediana <- function(vetor.ordenado)
{
#checa se tamanho é ímpar
if(length(vetor.ordenado) %% 2 != 0)
{
return(vetor.ordenado[round(length(vetor.ordenado) / 2)])
}else
{
print('O tamanho do vetor não é ímpar')
return(NULL)
}
}
c(100, 35, 67, 1, 9, 2, 15) %>% sort() %>% caso.tamanho.impar.mediana()
c(100, 35, 67, 1, 9, 2) %>% sort() %>% caso.tamanho.impar.mediana()
c(100, 35, 67, 1, 9, 2, 15) %>% sort()
df2 <- as.tibble(data.frame(cores = c("vermelho", "verde", "azul"), id = 1:3, altura = c(7, 35, 42), largura = c(22, 5, 3)))
df2
lifecycle::last_lifecycle_warnings()
df2 <- tibble::as_tibble(data.frame(cores = c("vermelho", "verde", "azul"), id = 1:3, altura = c(7, 35, 42), largura = c(22, 5, 3)))
df2
df2 <- tibble::as_tibble(data.frame(cores = c("vermelho", "verde", "azul"), id = 1:3, altura = c(7, 35, 42), largura = c(22, 5, 3)))
df2[, c("id", "altura", "largura")]
df3 <- data.frame(cores = c("vermelho", "verde", "azul", "verde", "vermelho", "azul"), id = 1:6, altura = c(7, 35, 42, 42, 21, 4), largura = c(22, 5, 3, 17, 5, 6))
df3 <- df3 %>% dplyr::mutate(area = altura * largura, perimetro = 2*altura + 2*largura)
#Agrupando os dados por cor do elemento geométrico (retangular)
dplyr::select(cores, altura:perimetro) %>% dplyr::group_by(cores) %>% dplyr::summarise(altura.media = mean(altura), altura.sd = sd(altura))
df3 %>% dplyr::select(cores, altura:perimetro) %>% dplyr::group_by(cores) %>% dplyr::summarise(altura.media = mean(altura), altura.sd = sd(altura))
rm(list = ls())
populacao.mundial.web <- rvest::read_html("https://en.wikipedia.org/wiki/World_population")
lpop <- populacao.mundial.web %>% rvest::html_nodes("table") %>% html_table()
library(rvest)
populacao.mundial.web <- rvest::read_html("https://en.wikipedia.org/wiki/World_population")
lpop <- populacao.mundial.web %>% rvest::html_nodes("table") %>% html_table()
pop.mundial <- lpop[[4]]
pop.mundial
names(pop.mundial)
gsub(" ","", names(pop.mundial))
gsub("/","", names(pop.mundial))
gsbu("\\s","_"gsub("/","", names(pop.mundial)))
gsbu("\\s","_",gsub("/","", names(pop.mundial)))
gsub("\\s","_",gsub("/","", names(pop.mundial)))
gsub("__","_",gsub("\\s","_",gsub("/","", names(pop.mundial))))
rm(list=ls())
minhaFuncao <- function(param1, param2, param3)
{
#Corpo da função
variavelFuncao <- (param1 + param2 ) - param3
#Saída da função
return(variavelFuncao)
}
minhaFuncao(10, 3, 2)
minhaFuncao(param1 = 10, param2 = 3, param3 = 2)
minhaFuncao(param1 = 10, param2 = 3, param3 = 5)
mm2 <- matrix(c(1, 4, 10, 5, 12, 3), nrow = 2, ncol = 3)
mm2
apply(mm2, 1, mean)
c(100, 35, 67, 1, 9, 2, 15) %>% sort()
vetor.hipotetico <- c(100, 35, 67, 1, 9, 2, 15)
median(vetor.hipotetico)
length(vetor.hipotetico)
vetor.hipotetico[round(length(vetor.hipotetico)/2)]
round(length(vetor.hipotetico)/2)
length(vetor.hipotetico)/2
library(tidyverse)
vetor.hipotetico %>% sort()
library(tidyverse)
library(rvest)
library(data.table)
vetor.hipotetico
aux <- vetor.hipotetico[-1]
aux
aux[length(aux)/2]
aux <- sort(vetor.hipotetico[-1])
aux
aux[length(aux)/2]
aux[(length(aux)/2):((length(aux)/2)+1)]
mean(aux[(length(aux)/2):((length(aux)/2)+1)])
mediana.apos.ordem <- function(vetor.ordenado)
{
#o vetor é par
if(length(vetor.ordenado) %% 2 == 0)
{
mediana <- mean(vetor.ordenado[(length(vetor.ordenado)/2):((length(vetor.ordenado)/2)+1)])
return(mediana)
#o vetor é ímpar
}else
{
mediana <- vetor.ordenado[round(length(vetor.ordenado)/2)]
return(mediana)
}
}
mediana.apos.ordem
c(100, 35, 67, 1, 9, 2) %>% sort() %>% mediana.apos.ordem()
c(100, 35, 67, 1, 9, 2, 15) %>% sort() %>% mediana.apos.ordem()
median(vetor.hipotetico)
vetor.hipotetico %>% sort() %>% mediana.apos.ordem()
c(100, 35, 67, 1, 9, 2) %>% sort() %>% mediana.apos.ordem()
sort(c(100, 35, 67, 1, 9, 2))
df2 <- tibble::as_tibble(data.frame(cores = c("vermelho", "verde", "azul"), id = 1:3, altura = c(7, 35, 42), largura = c(22, 5, 3)))
df2
df2[, c("id", "altura", "largura")]
df2 %>% dplyr::select(id, altura, largura)
df2 %>% dplyr::filter(cores == "vermelho")
df2 %>% dplyr::mutate(area = altura * largura, perimetro = 2*altura + 2*largura)
df3 <- data.frame(cores = c("vermelho", "verde", "azul", "verde", "vermelho", "azul"), id = 1:6, altura = c(7, 35, 42, 42, 21, 4), largura = c(22, 5, 3, 17, 5, 6))
df3
df3 <- tibble::as_tibble(data.frame(cores = c("vermelho", "verde", "azul", "verde", "vermelho", "azul"), id = 1:6, altura = c(7, 35, 42, 42, 21, 4), largura = c(22, 5, 3, 17, 5, 6)))
df3
df3 <- df3 %>% dplyr::mutate(area = altura * largura, perimetro = 2*altura + 2*largura)
df3
df3 %>% dplyr::group_by(cores) %>% dplyr::mutate(tot.area.cor = sum(area))
df3
df3 %>% dplyr::group_by(cores) %>% dplyr::mutate(tot.area.cor = sum(area))
df3 %>% dplyr::group_by(cores) %>% dplyr::mutate(tot.area.cor = sum(area))
df3 %>% dplyr::group_by(cores) %>% dplyr::summarise(tot.area.cor = sum(area))
28*27
df3
df3 %>% dplyr::select(cores, altura:perimetro)
df3 %>% dplyr::select(cores, altura:area)
df3 %>% dplyr::select(cores, altura:largura, perimetro)
f3 %>% dplyr::select(cores, altura:perimetro) %>% dplyr::group_by(cores) %>% dplyr::summarise(altura.media = mean(altura), altura.sd = sd(altura))
df3 %>% dplyr::select(cores, altura:perimetro) %>% dplyr::group_by(cores) %>% dplyr::summarise(altura.media = mean(altura), altura.sd = sd(altura))
populacao.mundial.web <- rvest::read_html("https://en.wikipedia.org/wiki/World_population")
lpop <- populacao.mundial.web %>% rvest::html_nodes("table") %>% html_table()
pop.mundial <- lpop[[4]]
pop.mundial
continentes <- readr::read_csv("dados_auxiliares/continents-according-to-our-world-in-data.csv")
continentes
pop.mundial
continentes
pop.mundial %>% dplyr::left_join(continentes, by = c("Country / Dependency" = "Entity"))
continentes
pop.mundial %>% dplyr::left_join(continentes, by = c("Country / Dependency" = "Entity"))
library(renv)
renv::init()
renv::status()
?snapshot
sessionInfo()
library(usethis)
install.packages("usethis")
library(usethis)
renv::snapshot()
library(usethis)
usethis::use_git_config(user.name = "Otto Tavares", user.email = "otavares93@gmail.com")
usethis::create_github_token()
gitcreds::gitcreds_set()
library(usethis)
usethis::create_github_token()
gitcreds::gitcreds_set()
library(usethis)
usethis::use_git_config(user.name = "Otto Tavares", user.email = "otavares93@gmail.com")
