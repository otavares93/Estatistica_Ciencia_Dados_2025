df2 <- tibble::as_tibble(data.frame(cores = c("vermelho", "verde", "azul"), id = 1:3, altura = c(7, 35, 42), largura = c(22, 5, 3)))
df2
df2 <- tibble::as_tibble(data.frame(cores = c("vermelho", "verde", "azul"), id = 1:3, altura = c(7, 35, 42), largura = c(22, 5, 3)))
df2[, c("id", "altura", "largura")]
df3 <- data.frame(cores = c("vermelho", "verde", "azul", "verde", "vermelho", "azul"), id = 1:6, altura = c(7, 35, 42, 42, 21, 4), largura = c(22, 5, 3, 17, 5, 6))
df3 <- df3 %>% dplyr::mutate(area = altura * largura, perimetro = 2*altura + 2*largura)
#Agrupando os dados por cor do elemento geométrico (retangular)
dplyr::select(cores, altura:perimetro) %>% dplyr::group_by(cores) %>% dplyr::summarise(altura.media = mean(altura), altura.sd = sd(altura))
df3 %>% dplyr::select(cores, altura:perimetro) %>% dplyr::group_by(cores) %>% dplyr::summarise(altura.media = mean(altura), altura.sd = sd(altura))
rm(list = ls())
populacao.mundial.web <- rvest::read_html("https://en.wikipedia.org/wiki/World_population")
lpop <- populacao.mundial.web %>% rvest::html_nodes("table") %>% html_table()
library(rvest)
populacao.mundial.web <- rvest::read_html("https://en.wikipedia.org/wiki/World_population")
lpop <- populacao.mundial.web %>% rvest::html_nodes("table") %>% html_table()
pop.mundial <- lpop[[4]]
pop.mundial
names(pop.mundial)
gsub(" ","", names(pop.mundial))
gsub("/","", names(pop.mundial))
gsbu("\\s","_"gsub("/","", names(pop.mundial)))
gsbu("\\s","_",gsub("/","", names(pop.mundial)))
gsub("\\s","_",gsub("/","", names(pop.mundial)))
gsub("__","_",gsub("\\s","_",gsub("/","", names(pop.mundial))))
rm(list=ls())
minhaFuncao <- function(param1, param2, param3)
{
#Corpo da função
variavelFuncao <- (param1 + param2 ) - param3
#Saída da função
return(variavelFuncao)
}
minhaFuncao(10, 3, 2)
minhaFuncao(param1 = 10, param2 = 3, param3 = 2)
minhaFuncao(param1 = 10, param2 = 3, param3 = 5)
mm2 <- matrix(c(1, 4, 10, 5, 12, 3), nrow = 2, ncol = 3)
mm2
apply(mm2, 1, mean)
c(100, 35, 67, 1, 9, 2, 15) %>% sort()
vetor.hipotetico <- c(100, 35, 67, 1, 9, 2, 15)
median(vetor.hipotetico)
length(vetor.hipotetico)
vetor.hipotetico[round(length(vetor.hipotetico)/2)]
round(length(vetor.hipotetico)/2)
length(vetor.hipotetico)/2
library(tidyverse)
vetor.hipotetico %>% sort()
library(tidyverse)
library(rvest)
library(data.table)
vetor.hipotetico
aux <- vetor.hipotetico[-1]
aux
aux[length(aux)/2]
aux <- sort(vetor.hipotetico[-1])
aux
aux[length(aux)/2]
aux[(length(aux)/2):((length(aux)/2)+1)]
mean(aux[(length(aux)/2):((length(aux)/2)+1)])
mediana.apos.ordem <- function(vetor.ordenado)
{
#o vetor é par
if(length(vetor.ordenado) %% 2 == 0)
{
mediana <- mean(vetor.ordenado[(length(vetor.ordenado)/2):((length(vetor.ordenado)/2)+1)])
return(mediana)
#o vetor é ímpar
}else
{
mediana <- vetor.ordenado[round(length(vetor.ordenado)/2)]
return(mediana)
}
}
mediana.apos.ordem
c(100, 35, 67, 1, 9, 2) %>% sort() %>% mediana.apos.ordem()
c(100, 35, 67, 1, 9, 2, 15) %>% sort() %>% mediana.apos.ordem()
median(vetor.hipotetico)
vetor.hipotetico %>% sort() %>% mediana.apos.ordem()
c(100, 35, 67, 1, 9, 2) %>% sort() %>% mediana.apos.ordem()
sort(c(100, 35, 67, 1, 9, 2))
df2 <- tibble::as_tibble(data.frame(cores = c("vermelho", "verde", "azul"), id = 1:3, altura = c(7, 35, 42), largura = c(22, 5, 3)))
df2
df2[, c("id", "altura", "largura")]
df2 %>% dplyr::select(id, altura, largura)
df2 %>% dplyr::filter(cores == "vermelho")
df2 %>% dplyr::mutate(area = altura * largura, perimetro = 2*altura + 2*largura)
df3 <- data.frame(cores = c("vermelho", "verde", "azul", "verde", "vermelho", "azul"), id = 1:6, altura = c(7, 35, 42, 42, 21, 4), largura = c(22, 5, 3, 17, 5, 6))
df3
df3 <- tibble::as_tibble(data.frame(cores = c("vermelho", "verde", "azul", "verde", "vermelho", "azul"), id = 1:6, altura = c(7, 35, 42, 42, 21, 4), largura = c(22, 5, 3, 17, 5, 6)))
df3
df3 <- df3 %>% dplyr::mutate(area = altura * largura, perimetro = 2*altura + 2*largura)
df3
df3 %>% dplyr::group_by(cores) %>% dplyr::mutate(tot.area.cor = sum(area))
df3
df3 %>% dplyr::group_by(cores) %>% dplyr::mutate(tot.area.cor = sum(area))
df3 %>% dplyr::group_by(cores) %>% dplyr::mutate(tot.area.cor = sum(area))
df3 %>% dplyr::group_by(cores) %>% dplyr::summarise(tot.area.cor = sum(area))
28*27
df3
df3 %>% dplyr::select(cores, altura:perimetro)
df3 %>% dplyr::select(cores, altura:area)
df3 %>% dplyr::select(cores, altura:largura, perimetro)
f3 %>% dplyr::select(cores, altura:perimetro) %>% dplyr::group_by(cores) %>% dplyr::summarise(altura.media = mean(altura), altura.sd = sd(altura))
df3 %>% dplyr::select(cores, altura:perimetro) %>% dplyr::group_by(cores) %>% dplyr::summarise(altura.media = mean(altura), altura.sd = sd(altura))
populacao.mundial.web <- rvest::read_html("https://en.wikipedia.org/wiki/World_population")
lpop <- populacao.mundial.web %>% rvest::html_nodes("table") %>% html_table()
pop.mundial <- lpop[[4]]
pop.mundial
continentes <- readr::read_csv("dados_auxiliares/continents-according-to-our-world-in-data.csv")
continentes
pop.mundial
continentes
pop.mundial %>% dplyr::left_join(continentes, by = c("Country / Dependency" = "Entity"))
continentes
pop.mundial %>% dplyr::left_join(continentes, by = c("Country / Dependency" = "Entity"))
library(renv)
renv::init()
renv::status()
?snapshot
sessionInfo()
library(usethis)
install.packages("usethis")
library(usethis)
renv::snapshot()
library(usethis)
usethis::use_git_config(user.name = "Otto Tavares", user.email = "otavares93@gmail.com")
usethis::create_github_token()
gitcreds::gitcreds_set()
library(usethis)
usethis::create_github_token()
gitcreds::gitcreds_set()
library(usethis)
usethis::use_git_config(user.name = "Otto Tavares", user.email = "otavares93@gmail.com")
ls
ls()
knitr::opts_chunk$set(echo = TRUE)
crimes <- readr::read_csv2("/Users/ottotavares/Library/Mobile Documents/com~apple~CloudDocs/Documents/infnet/Estatistica_Ciencia_Dados_2024/dados_auxiliares/BaseDPEvolucaoMensalCisp.csv", locale = readr::locale(encoding = "latin1"))
crimes
strsplit(crimes$mes_ano, split = "m")
lapply(strsplit(crimes$mes_ano, split = "m"), function(x) x[1])
unlist(lapply(strsplit(crimes$mes_ano, split = "m"), function(x) x[1]))
unlist(lapply(strsplit(crimes$mes_ano, split = "m"), function(x) x[2]))
library(data.table)
as.IDate(paste("01", unlist(lapply(strsplit(crimes$mes_ano, split = "m"), function(x) x[2])), unlist(lapply(strsplit(crimes$mes_ano, split = "m"), function(x) x[1])), sep = "-"), format = "%d-%m-%Y")
crimes <- readr::read_csv2("/Users/ottotavares/Library/Mobile Documents/com~apple~CloudDocs/Documents/infnet/Estatistica_Ciencia_Dados_2024/dados_auxiliares/BaseDPEvolucaoMensalCisp.csv", locale = readr::locale(encoding = "latin1"))
crimes <- crimes %>% dplyr::mutate(mes.ano = as.IDate(paste("01", mes, ano, sep = "-"), format = "%d-%m-%Y")) %>% dplyr::select(CISP, mes.ano, AISP, roubo_cx_eletronico:apreensao_drogas_sem_autor)
library(tidyverse)
library(readxl)
library(knitr)
library(data.table)
crimes <- crimes %>% dplyr::mutate(mes.ano = as.IDate(paste("01", mes, ano, sep = "-"), format = "%d-%m-%Y")) %>% dplyr::select(CISP, mes.ano, AISP, roubo_cx_eletronico:apreensao_drogas_sem_autor)
#Agregando variáveis por batalhão para facilitar a visualização
crimes.regioes <- crimes %>% dplyr::group_by(AISP, mes.ano) %>% dplyr::summarise_at(vars(apreensao_drogas:apreensao_drogas_sem_autor), sum)
crimes.regioes$aisp.nm <- ifelse(crimes.regioes$AISP == 2, "Botafogo", ifelse(crimes.regioes$AISP == 26, "Teresópolis",  ifelse(crimes.regioes$AISP == 20, "Nova Iguaçu", NA)))
ggplot(crimes.regioes, aes(x = mes.ano, y = furtos, group = AISP)) + geom_line()
names(crimes.regioes)
crimes
view(crimes)
view(crimes.regioes)
view(crimes)
crimes.regioes <- crimes %>% dplyr::group_by(AISP, mes.ano) %>% dplyr::summarise_at(vars(furto_veiculos:total_furtos), sum)
#Dando nome aos bairros atendidos pelos batalhões em questão e em seguida os selecionando como batalhões de interesse
crimes.regioes$aisp.nm <- ifelse(crimes.regioes$AISP == 2, "Botafogo", ifelse(crimes.regioes$AISP == 26, "Teresópolis",  ifelse(crimes.regioes$AISP == 20, "Nova Iguaçu", NA)))
view(crimes.regioes)
crimes.regioes
crimes
crimes <- readr::read_csv2("/Users/ottotavares/Library/Mobile Documents/com~apple~CloudDocs/Documents/infnet/Estatistica_Ciencia_Dados_2024/dados_auxiliares/BaseDPEvolucaoMensalCisp.csv", locale = readr::locale(encoding = "latin1"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(knitr)
library(data.table)
crimes <- readr::read_csv2("/Users/ottotavares/Library/Mobile Documents/com~apple~CloudDocs/Documents/infnet/Estatistica_Ciencia_Dados_2024/dados_auxiliares/BaseDPEvolucaoMensalCisp.csv", locale = readr::locale(encoding = "latin1"))
view(crimes)
mes_ano_aux <- strsplit(crimes$mes_ano, split = "m")
mes_ano_aux
mes_ano_aux <- strsplit(crimes$mes_ano, split = "m")
ano <- lapply(mes_ano_aux, function(elemento) elemento[1])
ano
ano <- unlist(lapply(mes_ano_aux, function(elemento) elemento[1]))
ano
mes_ano_aux
mes <- unlist(lapply(mes_ano_aux, function(elemento) elemento[2]))
mes
paste("01", mes, ano, sep = "-")
mes.ano.aux <- as.IDate(paste("01", mes, ano, sep = "-"), format = "%d-%m-%Y")
mes.ano.aux
mes.ano.aux[length(mes.ano.aux)] - mes.ano.aux[1]
mes.ano.aux[length(mes.ano.aux)]
7274/365
crimes$mes.ano <- mes.ano.aux
view(crimes)
head(crimes)
names(crimes)
crimes %>% dplyr::filter(mes.ano == as.IDate("01-07-2015"))
crimes %>% dplyr::filter(mes.ano == as.IDate("01-07-2015", format = "%d-%m-%Y"))
crimes %>% dplyr::filter(mes.ano == as.IDate("01-07-2015", format = "%d-%m-%Y")) %>% dplyr::select(CISP, mes, ano, mes_ano, AISP, mes.ano)
mes.ano.aux[length(mes.ano.aux)] - mes.ano.aux[1]
mes_ano_aux[length(mes_ano_aux)] - mes_ano_aux[1]
mes_ano_aux[length(mes_ano_aux)]
names(crimes)
crimes <- readr::read_csv2("/Users/ottotavares/Library/Mobile Documents/com~apple~CloudDocs/Documents/infnet/Estatistica_Ciencia_Dados_2024/dados_auxiliares/BaseDPEvolucaoMensalCisp.csv", locale = readr::locale(encoding = "latin1"))
crimes <- crimes %>% dplyr::mutate(mes.ano = as.IDate(paste("01", mes, ano, sep = "-"), format = "%d-%m-%Y")) %>% dplyr::select(CISP, mes.ano, AISP, roubo_cx_eletronico:apreensao_drogas_sem_autor)
ggplot(data = crimes.regioes) + geom_point(aes(x = mes.ano, y = total_furtos, group = AISP))
crimes.regioes <- crimes %>% dplyr::group_by(AISP, mes.ano) %>% dplyr::summarise_at(vars(furto_veiculos:total_furtos), sum)
#Dando nome aos bairros atendidos pelos batalhões em questão e em seguida os selecionando como batalhões de interesse
crimes.regioes$aisp.nm <- ifelse(crimes.regioes$AISP == 2, "Botafogo", ifelse(crimes.regioes$AISP == 26, "Teresópolis",  ifelse(crimes.regioes$AISP == 20, "Nova Iguaçu", NA)))
crimes.regioes <- crimes.regioes %>% dplyr::filter(AISP %in% c(2, 20, 26))
ggplot(data = crimes.regioes, aes(x = mes.ano, y = total_furtos, group = AISP)) + geom_line()
ggplot(data = crimes.regioes) + geom_point(aes(x = mes.ano, y = total_furtos, group = AISP))
ggplot(data = crimes.regioes, aes(x = mes.ano, y = total_furtos, group = AISP, color = aisp.nm)) +
geom_line()
p1 <- ggplot(data = crimes.regioes, aes(x = mes.ano, y = total_furtos, group = AISP)) + geom_line()
p1
p1 <- ggplot(data = crimes.regioes, aes(x = mes.ano, y = total_furtos, group = AISP, color = aisp.nm)) +
geom_line()
p1
p1 + theme_bw()
theme
theme()
?theme
?theme_bw()
crimes.regioes$mês.ano <- crimes.regioes$mes.ano
ggplot(data = crimes.regioes, aes(x = mês.ano, y = total_furtos, group = AISP, color = aisp.nm)) +
geom_line() +
theme_bw()
ggplot(data = crimes.regioes, aes(x = mês.ano, y = total_furtos, group = AISP, color = aisp.nm))
ggplot(data = crimes.regioes, aes(x = mês.ano, y = total_furtos, group = AISP, color = aisp.nm)) + geom_line()
ggplot(data = crimes.regioes, aes(x = "mês.ano", y = total_furtos, group = AISP, color = aisp.nm)) + geom_line()
ggplot(data = crimes.regioes, aes(x = "mês.ano", y = total_furtos, group = AISP, color = aisp.nm)) + geom_line()
ggplot(data = crimes.regioes, aes(x = mês.ano, y = total_furtos, group = AISP, color = aisp.nm)) + geom_line()
install.packages("basedosdados")
library(basedosdados)
library(tidyverse)
library(tidyverse)
library(readxl)
read_excel <- readxl::read_excel("dados_auxiliares/Solucoes-Bibliotecas-IES-2024.xlsx")
library(tidyverse)
library(readxl)
dados_educacionais <- readxl::read_excel("dados_auxiliares/Solucoes-Bibliotecas-IES-2024.xlsx")
dados_educacionais
dados_educacionais_agregados <- dados_educacionais %>% dplyr::group_by(UF) %>% dplyr::summarise(n_instituicoes = n())
dados_educacionais_agregados <- dados_educacionais %>% dplyr::group_by(UF) %>% dplyr::summarise(n_instituicoes = n())
dados_educacionais_agregados
mean(dados_educacionais_agregados$n_instituicoes)
#desvio padrão
sd(dados_educacionais_agregados$n_instituicoes)
set.seed(42)
dados <- data.frame(
x = rnorm(100, mean = 50, sd = 10),
y = rnorm(100, mean = 100, sd = 20)
)
ggplot(dados, aes(x = x, y = y)) +
# Adicionando os pontos com uma estética mapeada para legenda
geom_point(aes(color = "Pontos"), size = 3) +
# Adicionando a linha de regressão manualmente para personalizar a legenda
geom_smooth(method = "lm", se = FALSE, aes(color = "Regressão"), linewidth = 1) +
# Personalizando a legenda
scale_color_manual(
name = "Legenda",
values = c("Pontos" = "blue", "Regressão" = "red"),
labels = c("Pontos" = "Dados observados", "Regressão" = "Linha de tendência")
) +
theme_minimal()
ggplot(dados, aes(x = x, y = y)) +
# Adicionando os pontos com uma estética mapeada para legenda
geom_point(aes(color = "Pontos"), size = 3) +
# Adicionando a linha de regressão manualmente para personalizar a legenda
geom_smooth(method = "lm", se = FALSE, aes(color = "Regressao"), linewidth = 1) +
# Personalizando a legenda
scale_color_manual(
name = "Legenda",
values = c("Pontos" = "blue", "Regressao" = "red"),
labels = c("Pontos" = "Dados observados", "Regressão" = "Linha de tendência")
) +
theme_minimal()
ggplot(dados, aes(x = x, y = y)) +
# Adicionando os pontos com uma estética mapeada para legenda
geom_point(aes(color = "Pontos"), size = 3) +
# Adicionando a linha de regressão manualmente para personalizar a legenda
geom_smooth(method = "lm", se = FALSE, aes(color = "Regressao"), linewidth = 1) +
# Personalizando a legenda
scale_color_manual(
name = "Legenda",
values = c("Pontos" = "blue", "Regressao" = "red"),
labels = c("Pontos" = "Dados observados", "Regressao" = "Linha de tendência")
) +
theme_minimal()
install.packages("htmltools")
install.packages("fastmap")
lapply(salarios, function(x) table(x))
knitr::opts_chunk$set(echo = TRUE)
salarios <- readxl::read_excel("dados_auxiliares/dados_bussab_m.xlsx")
lapply(salarios, function(x) table(x))
lapply(salarios, function(x) prop.table(table(x)))
salarios %>% dfSummary() %>% view()
salarios %>% dfSummary() %>% View()
library(tidyverse)
salarios %>% dfSummary() %>% View()
library(summarytools)
salarios %>% dfSummary() %>% View()
salarios %>% dfSummary() %>% view()
library(tidyverse)
library(dlookr)
rm(list=ls())
library(tidyverse)
library(dlookr)
library(htmltools)
library(summarytools)
library(dlookr)
knitr::opts_chunk$set(echo = TRUE)
library(dlookr)
library(tidyverse)
library(summarytools)
library(readxl)
library(knitr)
salarios <- readxl::read_excel("dados_auxiliares/dados_bussab_m.xlsx")
View(salarios)
head(salarios)
salarios %>% dlookr::diagnose() %>% kable()
salarios %>% dlookr::diagnose() %>% kable()
salarios %>% dlookr::diagnose()
salarios %>% dplyr::select(regiao) %>% summarytools::freq(., style = 'rmarkdown')
salarios %>% dplyr::select(regiao) %>% summarytools::freq(.)
summarytools::freq()
?summarytools::freq
salarios %>% dplyr::select(regiao) %>% summarytools::freq(., style = 'rmarkdown', order = T)
salarios %>% dplyr::select(regiao) %>% summarytools::freq(., style = 'rmarkdown', order = "freq")
?summarytools::freq
salarios %>% dplyr::select(estado_civil) %>% summarytools::freq(., style = 'rmarkdown')
salarios %>% dplyr::select(n_filhos) %>% summarytools::freq(., style = 'rmarkdown')
salarios %>% dplyr::select(salario) %>% summarytools::descr(., style = 'rmarkdown')
salarios %>% dplyr::select(n_filhos) %>% summarytools::descr(., style = 'rmarkdown')
lapply(salarios, function(var) class(var))
salarios %>% dfSummary()
salarios %>% dfSummary() %>% view()
salarios %>% dplyr::select(n_filhos) %>% summarytools::descr(., style = 'rmarkdown')
library(renv)
renv::status()
renv::update()
renv::status()
renv::snapshot()
renv::status()
library(renv)
renv::update()
installed.packages("quantreg")
renv::snapshot()
renv::status()
?renv::status
renv::snapshot()
renv::status
renv::status()
renv::install("ggpubr")
renv::install("gfortran")
renv::install("gfortran")
install.packages("gfortran")
library(corrplot)
?stat_cor
library(ggplot2)
?stat_cor
library(tidyverse)
?stat_cor
library(ggpubr)
library(ggpubr)
library(ggpubr)
installed.packages("ggpubr")
devtools::install_github("kassambara/ggpubr")
library(devtools)
install.packages("devtools")
library(devtools)
devtools::install_github("kassambara/ggpubr")
library(ggpubr)
renv::status()
install.packages("rcompanion")
renv::status()
renv::snapshot()
renv::status()
?stat_cor
knitr::opts_chunk$set(echo = TRUE)
library(ggpubr)
?stat_cor
ls
ls()
crimes <- readr::read_csv2("/Users/ottotavares/Library/Mobile Documents/com~apple~CloudDocs/Documents/infnet/Estatistica_Ciencia_Dados_2025/dados_auxiliares/BaseDPEvolucaoMensalCisp.csv", locale = readr::locale(encoding = "latin1"))
crimes.aisp <- crimes %>% dplyr::select(CISP, mes, ano,  AISP,  RISP, roubo_transeunte, roubo_celular, posse_drogas) %>% dplyr::mutate(mes.ano = as.IDate(paste("01", mes, ano, sep = "-"), format = "%d-%m-%Y")) %>% dplyr::filter(mes.ano %in% c(as.IDate("01-12-2019",format = "%d-%m-%Y"), as.IDate("01-12-2020",format = "%d-%m-%Y"), as.IDate("01-12-2021",format = "%d-%m-%Y") ,as.IDate("01-12-2022",format = "%d-%m-%Y"))) %>% dplyr::group_by(AISP, mes.ano) %>% dplyr::summarise(roubo_transeunte = sum(roubo_transeunte), roubo_celular = sum(roubo_celular), posse_drogas = sum(posse_drogas))
library(data.table)
crimes.aisp <- crimes %>% dplyr::select(CISP, mes, ano,  AISP,  RISP, roubo_transeunte, roubo_celular, posse_drogas) %>% dplyr::mutate(mes.ano = as.IDate(paste("01", mes, ano, sep = "-"), format = "%d-%m-%Y")) %>% dplyr::filter(mes.ano %in% c(as.IDate("01-12-2019",format = "%d-%m-%Y"), as.IDate("01-12-2020",format = "%d-%m-%Y"), as.IDate("01-12-2021",format = "%d-%m-%Y") ,as.IDate("01-12-2022",format = "%d-%m-%Y"))) %>% dplyr::group_by(AISP, mes.ano) %>% dplyr::summarise(roubo_transeunte = sum(roubo_transeunte), roubo_celular = sum(roubo_celular), posse_drogas = sum(posse_drogas))
crimes.aisp <- crimes.aisp %>% dplyr::left_join(crimes %>% dplyr::select(AISP, Regiao, mes, ano) %>%
dplyr::mutate(mes.ano = as.IDate(paste("01", mes, ano, sep = "-"), format = "%d-%m-%Y")) %>% dplyr::filter(mes.ano %in% c(as.IDate("01-12-2019",format = "%d-%m-%Y"), as.IDate("01-12-2020",format = "%d-%m-%Y"), as.IDate("01-12-2021",format = "%d-%m-%Y") ,as.IDate("01-12-2022",format = "%d-%m-%Y"))) %>% dplyr::distinct(AISP, mes.ano, Regiao), by = c("AISP" = "AISP", "mes.ano"="mes.ano"))
crimes.aisp
crimes.aisp %>% dplyr::group_by(mes.ano) %>% dplyr::summarise(r.ao.quadrado = summary(lm(roubo_transeunte ~ as.factor(Regiao), crimes.aisp))$r.squared)
crimes.aisp %>% dplyr::filter(mes.ano = "2019-12-01") %>% summary(lm(roubo_transeunte ~ as.factor(Regiao), crimes.aisp))$r.squared
crimes.aisp %>% dplyr::filter(mes.ano = "2019-12-01") %>% summary(lm(.$roubo_transeunte ~ as.factor(.$Regiao), crimes.aisp))$r.squared
crimes.aisp %>% dplyr::filter(mes.ano = "2019-12-01") %>% summary(lm(.$roubo_transeunte ~ as.factor(.$Regiao), crimes.aisp))
crimes.aisp %>% dplyr::filter(mes.ano == "2019-12-01") %>% summary(lm(.$roubo_transeunte ~ as.factor(.$Regiao), crimes.aisp))
crimes.aisp %>% dplyr::filter(mes.ano == "2019-12-01") %>% summary(lm(.$roubo_transeunte ~ as.factor(.$Regiao), crimes.aisp))$r.squared
crimes.aisp %>% dplyr::filter(mes.ano == "2019-12-01") %>% lm(.$roubo_transeunte ~ as.factor(.$Regiao), crimes.aisp)
crimes.aisp %>% dplyr::filter(mes.ano == "2019-12-01") %>% dplyr::summarise(r.quadrado = lm(roubo_transeunte ~ as.factor(Regiao), .)$r.squared)
crimes.aisp %>% dplyr::filter(mes.ano == "2019-12-01") %>% summary(lm(roubo_transeunte ~ as.factor(Regiao), .))$r.squared
crimes.aisp %>% dplyr::filter(mes.ano == "2019-12-01") %>% summary(lm(roubo_transeunte ~ as.factor(Regiao), .))
library(renv)
renv::status()
renv::status()
install.packages("simputation")
install.packages("quantreg")
renv::status()
install.packages(“quantreg”, type = “binary”)
install.packages("quantreg", type = "binary")
install.packages("simputation")
renv::status()
renv::snapshot()
library(naniar)
?naniar::mcar_test
mcar_test(airquality)
library(mice)
install.packages("lme4")
library(mice)
renv::status()
?pmm
?normal
?normal.boot
?norm.boot
?norm
?norm.boot
library(tidyverse)
library(purrr)
library(dlookr)
library(summarytools)
library(readxl)
library(knitr)
library(data.table)
library(ggpubr)
library(corrplot)
library(rcompanion)
library(naniar)
library(mice)
library(simputation)
library(tidyverse)
library(purrr)
library(dlookr)
library(summarytools)
library(readxl)
library(knitr)
library(data.table)
library(ggpubr)
library(corrplot)
library(rcompanion)
library(naniar)
library(mice)
library(simputation)
crimes <- readr::read_csv2("/Users/ottotavares/Library/Mobile Documents/com~apple~CloudDocs/Documents/infnet/Estatistica_Ciencia_Dados_2024/dados_auxiliares/BaseDPEvolucaoMensalCisp.csv", locale = readr::locale(encoding = "latin1"))
crimes %>% naniar::miss_var_summary()
crimes %>% dplyr::mutate(mes.ano = as.IDate(paste("01", mes, ano, sep = "-"), format = "%d-%m-%Y")) %>% dplyr::select(CISP, mes.ano, AISP, roubo_cx_eletronico:apreensao_drogas_sem_autor) %>% naniar::vis_miss()
crimes %>% gg_miss_var()
crimes %>% dplyr::select(roubo_transeunte:total_furtos) %>% naniar::mcar_test()
crimes %>% dplyr::select(apreensao_drogas:apreensao_drogas_sem_autor) %>% naniar::mcar_test()
crimes %>%
dplyr::group_by(AISP, Regiao) %>% dplyr::filter(is.na(roubo_bicicleta)) %>%
dplyr::summarise(n = n())
204 + 264 + 660 + 192 + 327 + 366
204 + 264 + 660 + 192 + 327 + 366 + 714
crimes %>%
dplyr::group_by(AISP, Regiao) %>% dplyr::filter(is.na(roubo_bicicleta)) %>%
dplyr::summarise(n = n()) %>% dplyr::ungroup() %>%
dplyr::mutate(tot.miss = sum(n)) %>% dplyr::group_by(Regiao) %>%
dplyr::mutate(tot.miss.regiao = sum(n), freq.intra.regiao = n/tot.miss.regiao, freq.regiao = tot.miss.regiao/tot.miss) %>% dplyr::arrange(desc(freq.regiao), desc(n)) %>% kable()
crimes %>%
dplyr::group_by(AISP, Regiao) %>% dplyr::filter(is.na(posse_drogas)) %>%
dplyr::summarise(n = n()) %>% dplyr::ungroup() %>%
dplyr::mutate(tot.miss = sum(n)) %>% dplyr::group_by(Regiao) %>%
dplyr::mutate(tot.miss.regiao = sum(n), freq.intra.regiao = n/tot.miss.regiao, freq.regiao = tot.miss.regiao/tot.miss) %>% dplyr::arrange(desc(freq.regiao), desc(n)) %>% kable()
crimes.aisp <- crimes %>% dplyr::mutate(mes.ano = as.IDate(paste("01", mes, ano, sep = "-"), format = "%d-%m-%Y")) %>% dplyr::group_by(AISP, mes.ano) %>%
dplyr::summarise_at(vars(apreensao_drogas:apreensao_drogas_sem_autor), sum)
crimes.aisp.imp <- crimes.aisp %>% dplyr::group_by(AISP) %>% dplyr::select(mes.ano, apreensao_drogas:apreensao_drogas_sem_autor) %>%
as.data.frame() %>%
simputation::impute_knn(. ~ ., seed = 512) %>% dplyr::mutate_at(vars(apreensao_drogas:apreensao_drogas_sem_autor), as.numeric)
?pmm
salarios <- readxl::read_excel("/Users/ottotavares/Library/Mobile Documents/com~apple~CloudDocs/Documents/infnet/Estatistica_Ciencia_Dados_2024/dados_auxiliares/dados_bussab_m.xlsx")
salarios
salarios[complete.cases(salarios$n_filhos),]
library(dplyr)
salarios %>% na.omit()
crimes <- readr::read_csv2("/Users/ottotavares/Library/Mobile Documents/com~apple~CloudDocs/Documents/infnet/Estatistica_Ciencia_Dados_2024/dados_auxiliares/BaseDPEvolucaoMensalCisp.csv", locale = readr::locale(encoding = "latin1"))
knitr::opts_chunk$set(echo = TRUE)
crimes.aisp <- crimes %>% dplyr::mutate(mes.ano = as.IDate(paste("01", mes, ano, sep = "-"), format = "%d-%m-%Y")) %>% dplyr::group_by(AISP, mes.ano) %>%
dplyr::summarise_at(vars(apreensao_drogas:apreensao_drogas_sem_autor), sum)
library(data.table)
crimes.aisp <- crimes %>% dplyr::mutate(mes.ano = as.IDate(paste("01", mes, ano, sep = "-"), format = "%d-%m-%Y")) %>% dplyr::group_by(AISP, mes.ano) %>%
dplyr::summarise_at(vars(apreensao_drogas:apreensao_drogas_sem_autor), sum)
crimes.aisp
vec.norm <- rnorm(100, mean = 5, sd = 2)
mean(vec.norm)
plot(vec.norm)
hist(vec.norm)
hist(rnorm(1000, mean = 5, sd = 2))
hist(rnorm(10000, mean = 5, sd = 2))
contas.tel <- rnorm(2000, mean = 60, sd = 2)
rnorm(2000, mean = 60, sd = 2)
contas.tel <- rnorm(2000, mean = 60, sd = 2)
hist(contas.tel)
hist(contas.tel)
t.test(contas.tel, mu = 52, alternative = 'greater', conf.level = 0.9)
t.test(contas.tel, mu = 52, alternative = 'less', conf.level = 0.9)
shapiro.test(contas.tel)
contas.tel <- runif(2000, min = 54, max = 68)
hist(contas.tel)
shapiro.test(contas.tel)
contas.tel <- rnorm(2000, min = 54, max = 68)
contas.tel <- rnorm(2000, mean = 60, sd = 2)
shapiro.test(contas.tel)
income <- readxl::read_excel("/Users/ottotavares/Library/Mobile Documents/com~apple~CloudDocs/Documents/infnet/Estatistica_Ciencia_Dados_2025/dados_auxiliares/income.xlsx")
income
